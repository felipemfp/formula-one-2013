{"version":3,"sources":["scripts/app.js"],"names":["angular","module","ergastAPI","$log","$http","getDrivers","getDriversComplete","response","drivers","data","MRData","StandingsTable","StandingsLists","DriverStandings","getDriversFailed","error","toJson","method","url","apiHost","then","getDriverDetails","id","getDriverDetailsComplete","getDriverDetailsFailed","getDriverRaces","getDriverRacesComplete","RaceTable","Races","getDriverRacesFailed","$inject","factory","DriversController","vm","this","loading","nameFilter","driversList","searchFilter","driver","keyword","RegExp","test","Driver","givenName","familyName","fetchedData","controller","DriverController","$routeParams","races","runBlock","debug","run","routeConfig","$routeProvider","when","templateUrl","controllerAs","otherwise","redirectTo","config","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-6cd70de056.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('helloAngular', ['ngRoute']);\n\n})();\n\n(function() {\n  'use_strict';\n\n  angular\n    .module('helloAngular')\n    .factory('ergastAPI', ergastAPI);\n\n  /** @ngInject */\n  function ergastAPI($log, $http) {\n    var apiHost = 'http://ergast.com/api/f1/2013'\n\n    var ergastAPI = {\n      apiHost: apiHost,\n      getDrivers: getDrivers,\n      getDriverDetails: getDriverDetails,\n      getDriverRaces: getDriverRaces\n    };\n\n    return ergastAPI;\n\n    function getDrivers() {\n      return $http({\n        method: 'JSONP',\n        url: apiHost + '/driverStandings.json?callback=JSON_CALLBACK'\n      }).then(getDriversComplete).catch(getDriversFailed);\n\n      function getDriversComplete(response) {\n        var drivers = response.data\n          .MRData.StandingsTable.StandingsLists[0].DriverStandings;\n        return drivers;\n      }\n\n      function getDriversFailed(error) {\n        $log.error('XHR Failed for getDrivers.\\n' + angular.toJson(error.data, true));\n      }\n    }\n\n    function getDriverDetails(id) {\n      return $http({\n        method: 'JSONP',\n        url: apiHost + '/drivers/' + id + '/driverStandings.json?callback=JSON_CALLBACK'\n      }).then(getDriverDetailsComplete).catch(getDriverDetailsFailed);\n\n      function getDriverDetailsComplete(response) {\n        return response.data.MRData.StandingsTable.StandingsLists[0].DriverStandings[0];\n      }\n\n      function getDriverDetailsFailed(error) {\n        $log.error('XHR Failed for getDriverDetails.\\n' + angular.toJson(error.data, true));\n      }\n    }\n\n    function getDriverRaces(id) {\n      return $http({\n        method: 'JSONP',\n        url: apiHost + '/drivers/' + id + '/results.json?callback=JSON_CALLBACK'\n      }).then(getDriverRacesComplete).catch(getDriverRacesFailed);\n\n      function getDriverRacesComplete(response) {\n        return response.data.MRData.RaceTable.Races;\n      }\n\n      function getDriverRacesFailed(error) {\n        $log.error('XHR Failed for getDriverRaces.\\n' + angular.toJson(error.data, true));\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('helloAngular')\n    .controller('DriversController', DriversController);\n\n  /** @ngInject */\n  function DriversController(ergastAPI) {\n    var vm = this;\n    vm.loading = true;\n    vm.nameFilter = '';\n    vm.driversList = [];\n\n    vm.searchFilter = function(driver) {\n      var keyword = new RegExp(vm.nameFilter, 'i');\n      return !vm.nameFilter || keyword.test(driver.Driver.givenName) || keyword.test(driver.Driver.familyName);\n    };\n\n    ergastAPI.getDrivers().then(function(fetchedData) {\n      //Dig into the responde to get the relevant data\n      vm.driversList = fetchedData;\n      vm.loading = false;\n    });\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('helloAngular')\n    .controller('DriverController', DriverController);\n\n  /** @ngInject */\n  function DriverController($routeParams, ergastAPI) {\n    var vm = this;\n\n    vm.id = $routeParams.id;\n    vm.loading = true;\n    vm.races = [];\n    vm.driver = null;\n\n    ergastAPI.getDriverDetails(vm.id).then(function(fetchedData) {\n      vm.driver = fetchedData;\n    });\n\n    ergastAPI.getDriverRaces(vm.id).then(function(fetchedData) {\n      vm.races = fetchedData;\n      vm.loading = false;\n    });\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('helloAngular')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('helloAngular')\n    .config(routeConfig);\n\n  function routeConfig($routeProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'app/drivers/drivers.view.html',\n        controller: 'DriversController',\n        controllerAs: 'drivers'\n      })\n      .when('/drivers/:id', {\n        templateUrl: 'app/driver/driver.view.html',\n        controller: 'DriverController',\n        controllerAs: 'driver'\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('helloAngular');\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('helloAngular')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n  }\n\n})();\n\nangular.module(\"helloAngular\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/driver/driver.view.html\",\"<div class=container><a href=./#/drivers><i class=\\\"tiny material-icons\\\">arrow_back</i> Back to drivers list</a><div id=secondary class=main-nav><div><h3><img ng-src=assets/images/helmet.svg width=4% style=vertical-align:top> {{driver.driver.Driver.givenName}} {{driver.driver.Driver.familyName}}</h3></div><div class=driver-status><b>Country</b>: {{driver.driver.Driver.nationality}}<br><b>Team</b>: {{driver.driver.Constructors[0].name}}<br><b>Birth</b>: {{driver.driver.Driver.dateOfBirth}}<br><a href={{driver.driver.Driver.url}} target=_blank>Biography <i class=\\\"tiny material-icons\\\">open_in_new</i></a></div></div><div><h5>Formula 1 2013 Results</h5><table class=striped><thead><tr><th>Round</th><th>Grand Prix</th><th>Team</th><th>Grid</th><th>Race</th></tr></thead><tbody><tr ng-repeat=\\\"race in driver.races\\\"><td>{{race.round}}</td><td>{{race.raceName}}</td><td>{{race.Results[0].Constructor.name}}</td><td>{{race.Results[0].grid}}</td><td>{{race.Results[0].position}}</td></tr></tbody></table><div class=progress ng-show=driver.loading><div class=indeterminate></div></div></div></div>\");\n$templateCache.put(\"app/drivers/drivers.view.html\",\"<div class=container><input type=text ng-model=drivers.nameFilter placeholder=Search...><table><thead><tr><th colspan=4>Drivers Championship Standings</th></tr></thead><tbody><tr ng-repeat=\\\"driver in drivers.driversList | filter: drivers.searchFilter\\\"><td>{{$index + 1}}</td><td><a href=#/drivers/{{driver.Driver.driverId}}>{{driver.Driver.givenName}}&nbsp;{{driver.Driver.familyName}}</a></td><td>{{driver.Constructors[0].name}}</td><td>{{driver.points}}</td></tr></tbody></table><div class=progress ng-show=drivers.loading><div class=indeterminate></div></div></div>\");}]);"],"sourceRoot":"/source/"}